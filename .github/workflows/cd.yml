#name: CD - Deploy to Amazon ECS
#
#on:
#  workflow_run:
#    workflows: ["CI - Build and Push to ECR"]
#    types:
#      - completed
#
#env:
#  AWS_REGION: ap-northeast-2
#  ECR_REPOSITORY: toystory
#  ECS_SERVICE: toystory-back
#  ECS_CLUSTER: DevCluster
#  ECS_TASK_DEFINITION: ./aws/task_definition.json
#  CONTAINER_NAME: toystory
#  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
#
#permissions:
#  contents: read
#
#jobs:
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    environment: production
#
#    steps:
#      # AWS 자격 증명을 구성합니다.
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ECS_CD_ACCESS_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_ECS_CD_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      # Amazon ECR에 로그인합니다.
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      # 새로운 이미지 ID를 ECS 작업 정의에 채웁니다.
#      - name: Fill in the new image ID in the Amazon ECS task definition
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: ${{ env.ECS_TASK_DEFINITION }}
#          container-name: ${{ env.CONTAINER_NAME }}
#          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
#
#      # 새로운 ECS 작업 정의를 배포합니다.
#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.task-def.outputs.task-definition }}
#          service: ${{ env.ECS_SERVICE }}
#          cluster: ${{ env.ECS_CLUSTER }}
#          wait-for-service-stability: true
